version: '3.8'

services:
  # Development training service
  training-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.training
    container_name: mvtec-training-dev
    environment:
      - PYTHONPATH=/app
      - CUDA_VISIBLE_DEVICES=0
      - WANDB_MODE=online
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - ./dataset:/app/dataset
      - ./checkpoints:/app/checkpoints
      - ./logs:/app/logs
      - ./config:/app/config
      - ./src:/app/src
      - ./scripts:/app/scripts
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mvtec-network
    depends_on:
      - database-dev
    command: ["python3", "-m", "src.training.train", "--config-name=development"]

  # Development inference API
  inference-api-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.inference
    container_name: mvtec-inference-dev
    ports:
      - "5000:5000"
    environment:
      - PYTHONPATH=/app
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - ENVIRONMENT=development
      - API_HOST=0.0.0.0
      - API_PORT=5000
      - DEBUG=true
    volumes:
      - ./checkpoints:/app/checkpoints
      - ./uploads:/app/uploads
      - ./results:/app/results
      - ./logs:/app/logs
      - ./config:/app/config
      - ./src:/app/src
      - ./templates:/app/templates
      - ./static:/app/static
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mvtec-network
    depends_on:
      - database-dev
      - redis-dev
    command: ["python3", "-m", "src.api.app"]

  # Development database
  database-dev:
    image: postgres:13
    container_name: mvtec-database-dev
    environment:
      - POSTGRES_DB=anomaly_detection_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - mvtec-network

  # Development Redis
  redis-dev:
    image: redis:6-alpine
    container_name: mvtec-redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - mvtec-network

  # Jupyter notebook for development
  jupyter:
    build:
      context: .
      dockerfile: docker/Dockerfile.jupyter
    container_name: mvtec-jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/app
    volumes:
      - ./notebooks:/app/notebooks
      - ./dataset:/app/dataset
      - ./src:/app/src
      - ./config:/app/config
      - ./checkpoints:/app/checkpoints
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - mvtec-network
    command: ["jupyter", "lab", "--ip=0.0.0.0", "--allow-root", "--no-browser"]

  # Development monitoring
  monitoring-dev:
    image: prom/prometheus:latest
    container_name: mvtec-monitoring-dev
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    networks:
      - mvtec-network

networks:
  mvtec-network:
    driver: bridge

volumes:
  postgres_dev_data:
  redis_dev_data:
  prometheus_dev_data: